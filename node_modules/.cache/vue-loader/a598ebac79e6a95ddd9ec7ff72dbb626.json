{"remainingRequest":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Chris/Desktop/Programming/VueVisualizer/src/views/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/src/views/Profile.vue","mtime":1546827092000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":1546594483000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SpotifyService from '@/services/SpotifyService';\n\nexport default {\n\tname: 'SystemSettings',\n\tprops: {\n\t\ttoken: String\n\t},\n\tdata() {\n\t\treturn {\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getAccount();\n\t},\n\tmethods: {\n\tasync getAccount() {\n      const profileResponse = await SpotifyService.getProfile(this.token);\n\t\t\tthis.primary_user = profileResponse.data.name;\n\t\t\tthis.primary_type = profileResponse.data.type;\n\t\t\tthis.primary_type = this.primary_type.charAt(0).toUpperCase() + this.primary_type.slice(1);\n\t\t},\n\t}\n}\n",{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\t<div>\n\t\t<v-wait for='api'>\n\t\t\t<template slot=\"waiting\">\n        \t\t\t<img src='@/assets/5.gif' style='position: absolute;top: 50%;left: 50%;margin-right:-50%;transform: translate(-50%, -50%)'/>\n    \t\t</template>\n\t\t</v-wait>\n\t\t<!--<h2 class='md-title'>Primary Spotify Account</h2>\n\t\t<div class='md-subhead' style='overflow-wrap:break-word'>This is the account that will be used for music streaming</div>\n\t\t<div v-if='tokenExists===true'>\n\t\t\t<md-card class='spotifyCard'>\n      \t\t<md-card-header>\n       \t\t\t<md-card-header-text>\n         \t\t\t<div class=\"md-title\">{{primary_user}}</div>\n      \t\t\t\t<div class=\"md-subhead\">{{primary_type}}</div>\n\t\t\t\t\t</md-card-header-text>\n\n\t\t\t\t\t<md-card-media>\n\t\t\t\t\t\t<img src=\"@/assets/spotifyLogo.png\" alt=\"Spotify\">\n        \t\t\t</md-card-media>\n      \t\t</md-card-header>\n\n      \t\t<md-card-actions>\n      \t\t\t<md-button @click='deleteToken()'>Unlink</md-button>\n      \t\t</md-card-actions>\n\t\t\t</md-card>\n\t\t</div>\n\n\t\t<div v-if='tokenExists===false'>\n\t\t\t<md-card class='spotifyCard'>\n   \t\t\t<md-card-header>\n\t\t\t\t\t<md-card-header-text>\n      \t\t\t\t<div class=\"md-title\">No Primary Account</div>\n\t\t\t\t\t\t<div class=\"md-subhead\">Link a new account</div>\n      \t\t\t</md-card-header-text>\n \t\t\t\t\t\n\t\t\t\t\t<md-card-media>\n   \t\t\t\t\t<img src=\"@/assets/spotifyLogo.png\" alt=\"Spotify\">\n   \t\t\t\t</md-card-media>\n      \t\t</md-card-header>\n\n      \t\t<md-card-actions>\n        \t\t\t<md-button @click='linkAccount()'>Link Account</md-button>\n      \t\t</md-card-actions>\n   \t\t</md-card>\n\t\t</div>-->\n\t</div>\n</template>\n\n<script>\nimport SpotifyService from '@/services/SpotifyService';\n\nexport default {\n\tname: 'SystemSettings',\n\tprops: {\n\t\ttoken: String\n\t},\n\tdata() {\n\t\treturn {\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.getAccount();\n\t},\n\tmethods: {\n\tasync getAccount() {\n      const profileResponse = await SpotifyService.getProfile(this.token);\n\t\t\tthis.primary_user = profileResponse.data.name;\n\t\t\tthis.primary_type = profileResponse.data.type;\n\t\t\tthis.primary_type = this.primary_type.charAt(0).toUpperCase() + this.primary_type.slice(1);\n\t\t},\n\t}\n}\n</script>\n\n<style scoped>\n\t\n</style>\n"]}]}