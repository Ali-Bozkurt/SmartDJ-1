{"remainingRequest":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Chris/Desktop/Programming/VueVisualizer/src/components/Signin.vue?vue&type=style&index=0&id=8e11165c&scoped=true&lang=css&","dependencies":[{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/src/components/Signin.vue","mtime":1542537753000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":1546594483000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.md-card {\n  z-index:1;\n  margin-right:10px;\n}\n.md-card-content {\n  padding: 50px;\n}\n.md-button {\n  background-color:#42b983;\n  color:white;\n}\n",{"version":3,"sources":["Signin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Signin.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<md-card class=\"md-size-50 md-small-size-100\">\n\t\t<md-card-header>\n\t\t\t<div class=\"md-title\">Sign into your Account</div>\n\t\t</md-card-header>\n\t\t\n\t\t<md-card-content>\n\t\t\t<div class=\"md-layout md-gutter\">\n\t\t\t\t<div class=\"md-layout-item md-small-size-100\">\n\t\t\t\t\t<md-field :class=\"getValidationClass('userName')\">\n\t\t\t\t\t\t<label for=\"user-name\">Username</label>\n\t\t\t\t\t\t<md-input type=\"user-name\" name=\"user-name\" id=\"user-name\" v-model.lazy=\"$v.form.userName.$model\"/>\n\t\t\t\t\t\t<span class=\"md-error\" v-if=\"!$v.form.userName.required\">The username is required</span>\n\t\t\t\t\t</md-field>\n\t\t\t\t</div>\n      </div>\n      <div class=\"md-layout md-gutter\">\n      \t<div class=\"md-layout-item md-small-size-100\">\n        \t<md-field :class=\"getValidationClass('password')\">\n          \t<label for=\"password\">Password</label>\n          \t<md-input type=\"password\" name=\"password\" id=\"password\" v-model.lazy=\"$v.form.password.$model\"/>\n          \t<span class=\"md-error\" v-if=\"!$v.form.password.required\">The password is required</span>\n          </md-field>\n        </div>\n      </div>\n      <div class=\"md-layout md-gutter\">\n        <div class=\"md-layout-item md-small-size-100\">\n          <md-button class=\"md-raised\" @click='login()' style='margin-top:20px'>Sign In</md-button>\n        </div>\n      </div>\n    </md-card-content>\n  </md-card>\n</template>\n\n<script>\n/* eslint-disable */\nimport { required, minLength } from \"vuelidate/lib/validators\";\nimport UserService from '@/services/UserService';\n\nexport default {\n  name: \"SignIn\",\n  components: {},\n  data() {\n    return {\n      form: {\n        password: null,\n        userName: null\n      },\n      userSaved: false,\n      sending: false,\n      lastUser: null\n    }\n  },\n  validations: {\n    form: {\n      password: {\n        required,\n      },\n      userName: {\n        required,\n      }\n    }\n  },\n  methods: {\n    getValidationClass(fieldName) {\n      const field = this.$v.form[fieldName];\n      if (field) {\n        return {\n          \"md-invalid\": field.$invalid && field.$dirty\n        };\n      }\n    },\n    clearForm() {\n      this.$v.$reset();\n      this.form.password = null;\n      this.form.userName = null;\n      this.form.email = null;\n    },\n    async login() {\n      const response = await UserService.loginUser({\n        username: this.$v.form.userName.$model,\n        password: this.$v.form.password.$model\n      });\n      if(response.data.success === true) {\n        localStorage.setItem('jwtToken', response.data.token);\n        console.log('username: '+this.$v.form.userName.$model);\n        localStorage.setItem('username', this.$v.form.userName.$model);\n        this.$router.go(-1);\n      } else {\n        alert(response.data.msg);\n        this.clearForm();\n      }\n    },\n    clearForm() {\n      this.$v.form.userName.$model = '';\n      this.$v.form.password.$model = '';\n      this.$v.$reset();\n    },\n  }\n};\n</script>\n\n<style scoped>\n.md-card {\n  z-index:1;\n  margin-right:10px;\n}\n.md-card-content {\n  padding: 50px;\n}\n.md-button {\n  background-color:#42b983;\n  color:white;\n}\n</style>\n"]}]}