{"remainingRequest":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Chris/Desktop/Programming/VueVisualizer/src/views/SpotifyProfile.vue?vue&type=style&index=0&id=70aaf26e&scoped=true&lang=css&","dependencies":[{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/src/views/SpotifyProfile.vue","mtime":1546642162000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":1546594483000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#cent {\n  position:absolute;\n  top:50%;\n  left:50%;\n  margin-top:-50px; /* this is half the height of your div*/  \n  margin-left:-100px; /*this is half of width of your div*/\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\n.button {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n",{"version":3,"sources":["SpotifyProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SpotifyProfile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\t<div>\n\t\t<v-wait for='User Information'>\n\t\t\t<template slot=\"waiting\">\n        \t\t\t<img src='@/assets/5.gif' style='position: absolute;top: 50%;left: 50%;margin-right:-50%;transform: translate(-50%, -50%)'/>\n    \t\t</template>\n\t\t\t<h1>Spotify {{type}} User</h1>\n\t\t\t<hr style='width:35%'>\n\t\t\t<h2 style='display:inline;margin-right:10px;'>{{name}}</h2><small><p style='display:inline'> Followers: {{followers}}</p></small>\n\t\t\t<h3>Birthday: {{birthday}}</h3>\n\t\t\t<div v-if='onCurrPlaying===true'>\n\t\t\t\t<br>\n\t\t\t\t<h3>Currently Listening To: </h3>\n\t\t\t\t<b>{{artist}}</b><br>\n\t\t\t\t<b>{{track}}</b>\n\t\t\t</div>\n\t\t\t<div v-if='onTopArtists===true'>\n\t\t\t\t<br>\n\t\t\t\t<h3>Top 20 Artists: </h3>\n\t\t\t\t<ul v-for='(artist) in artists' :key='artist'>\n\t\t\t\t\t<li>{{artist}}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div v-if='onDevices===true'>\n\t\t\t\t<br>\n\t\t\t\t<h3>{{deviceTitle}}</h3>\n\t\t\t\t<p v-if=\"deviceTitle==='No Available Devices'\">All devices must be off</p>\n\t\t\t\t<ul v-for='device in devices' :key='device.name'>\n\t\t\t\t\t<li>Device Name: {{device.name}}</li>\n\t\t\t\t\t<li>Device ID: {{device.id}}</li>\n\t\t\t\t\t<li>Type: {{device.type}}</li>\n\t\t\t\t\t<li>Active: {{device.is_active}}</li>\n\t\t\t\t\t<li>Private Session: {{device.is_private_session}}</li>\n\t\t\t\t\t<li>Volume: {{device.volume_percent}}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<a href='' target=\"_blank\" rel=\"noopener\">{{email}}</a><br>\n\t\t\t<a :href='url' target=\"_blank\" rel=\"noopener\">{{url}}</a><br>\n\t\t\t<ul style='margin-top:20px'>\n\t\t\t\t<li class='button'><b-button @click='currentlyPlaying()'>Get Currently Playing Track</b-button></li>\n\t\t\t\t<li class='button'><b-button @click='getTopArtists()'>Get Top Artists</b-button></li>\n\t\t\t\t<li class='button'><b-btn @click='getDevices()'>Get Devices</b-btn></li>\n\t\t\t\t<li class='button'><b-btn>Get Current Playback Info</b-btn></li>\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\t<li class='button'><b-button @click='player()'>Start Web Player</b-button></li>\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\t<li class='button'><b-button @click='prev()'>Previous Track</b-button></li>\n\t\t\t\t<li class='button'><b-button @click='next()'>Next Track</b-button></li>\n\t\t\t</ul>\n\t\t\t<md-button class=\"md-raised md-primary\" @click='logout()'>Log Out</md-button>\n\t\t</v-wait>\n\t</div>\n</template>\n\n<script>\n /* eslint-disable */\nimport SpotifyService from '@/services/SpotifyService';\n\nexport default {\n\tname: 'Profile',\n\tdata() {\n\t\treturn {\n\t\t\tonCurrPlaying: false,\n\t\t\tonTopArtists: false,\n\t\t\tonDevices: false,\n\t\t\tartist: '',\n\t\t\ttrack: '',\n\t\t\talbum: '',\n\t\t\tartists: [],\n\t\t\tname: '',\n\t\t\tbirthday: '',\n\t\t\temail: '',\n\t\t\turl: '',\n\t\t\tfollowers: '',\n\t\t\ttype: '',\n\t\t\taccess_token: '',\n\t\t\tdevices: [],\n\t\t\tdeviceTitle: 'Available Devices'\n\t\t}\n\t},\n\tbeforeRouteEnter(to, from, next) {\n\t\tnext(vm => {\n\t\t\tif(localStorage.jwtToken) {\n\t\t\t\tnext();\n\t\t\t} else {\n\t\t\t\tnext('/signin');\n\t\t\t}\n\t\t});\n\t},\n\tcreated(){\n\t\tthis.getProfile();\n\t\tsetInterval(async () => {\n\t\t\tconst tokenResponse = await UserService.getUser(this.$route.params.username);\n\t\t\tthis.access_token = tokenResponse.data.user.access_token;\n\t\t}, 900000);\n\t},\n\tmethods: {\n\t\tasync getProfile() {\n\t\t\tthis.$wait.start('User Information');\n\t\t\tconst userResponse = await UserService.getUser(this.$route.params.username);\n\t\t\tthis.access_token = userResponse.data.user.access_token;\n\t\t\tconsole.log('getting profile');\n\t\t\tconst response = await SpotifyService.getUserProfile(this.access_token);\n\t\t\tthis.name = response.data.name;\n\t\t\tthis.birthday = response.data.birthday;\n\t\t\tthis.email = response.data.email;\n\t\t\tthis.url = response.data.url;\n\t\t\tthis.followers = response.data.followerTotal;\n\t\t\tthis.type = response.data.type;\n\t\t\tthis.type = this.type.charAt(0).toUpperCase() + this.type.slice(1);\n\t\t\tthis.$wait.end('User Information');\n\t\t},\n\t\tasync currentlyPlaying() {\n\t\t\tthis.onTopArtists = false;\n\t\t\tthis.onDevices = false;\n\t\t\tconst response = await SpotifyService.getUserCurrentlyPlaying(this.access_token);\n\t\t\tthis.onCurrPlaying = true;\n\t\t\tif(response.data.is_playing === false) {\n\t\t\t\tthis.artist = 'User is not playing anything right now';\n\t\t\t\tthis.track = '';\n\t\t\t} else {\n\t\t\t\tthis.album = response.data.object.item.album.name;\n\t\t\t\tthis.artist = response.data.object.item.album.artists[0].name +\" | \"+this.album;\n\t\t\t\tthis.track = response.data.object.item.name;\n\t\t\t}\n\t\t},\n\t\tasync getTopArtists() {\n\t\t\tthis.onCurrPlaying = false;\n\t\t\tthis.onDevices = false;\n\t\t\tconst response = await SpotifyService.getUserTopArtists(this.access_token);\n\t\t\tthis.onTopArtists = true;\n\t\t\tif(response.data.success === true) {\n\t\t\t\tfor(var i = 0; i < 20; i++) {\n\t\t\t\t\tthis.artists.push(response.data.artists[i].name);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync getDevices() {\n\t\t\tthis.onCurrPlaying = false;\n\t\t\tthis.onTopArtists = false;\n\t\t\tconst response = await SpotifyService.getUserDevices(this.access_token);\n\t\t\tthis.onDevices = true;\n\t\t\tif(response.data.success == true) {\n\t\t\t\tthis.devices = response.data.devices;\n\t\t\t\tthis.deviceTitle = \"Available Devices\"\n\t\t\t\tif(this.devices[0] === undefined) {\n\t\t\t\t\tthis.deviceTitle = 'No Available Devices';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync next() {\n\t\t\tawait SpotifyService.nextUserTrack({\n\t\t\t\taccess_token: this.access_token\n\t\t\t});\n\t\t},\n\t\tasync prev() {\n\t\t\tawait SpotifyService.previousUserTrack({\n\t\t\t\taccess_token: this.access_token\n\t\t\t});\n\t\t},\n\t\tasync player() {\n\t\t\tconst response = await SpotifyService.startPlayer();\n\t\t},\n\t\tlogout() {\n\t\t\tlocalStorage.removeItem('jwtToken');\n\t\t\tthis.$router.push({name: 'signin'});\n\t\t},\n\t\tasync refreshTempToken() {\n\t\t\tthis.$wait.start('User Information');\n\t\t\tconst userResponse = await UserService.getUser(this.$route.params.username);\n\t\t\tconst spotifyResponse = await SpotifyService.refreshTempAccessToken({\n        \t\taccess_token: userResponse.data.user.access_token,\n        \t\trefresh_token: userResponse.data.user.refresh_token\n\t\t\t});\n\t\t\tconst updateResponse = await UserService.updateToken(this.$route.params.username, {\n\t\t\t\taccess_token: spotifyResponse.data.access_token,\n\t\t\t\trefresh_token: spotifyResponse.data.refresh_token\n\t\t\t});\n\t\t\tthis.getProfile();\n\t\t\tthis.$wait.end('User Information');\n    \t}\n\t}\n}\n</script>\n\n<style scoped>\n#cent {\n  position:absolute;\n  top:50%;\n  left:50%;\n  margin-top:-50px; /* this is half the height of your div*/  \n  margin-left:-100px; /*this is half of width of your div*/\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\n.button {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}