{"remainingRequest":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Chris/Desktop/Programming/VueVisualizer/src/views/Visualizer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/src/views/Visualizer.vue","mtime":1546771750000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/cache-loader/dist/cjs.js","mtime":1546594483000},{"path":"/Users/Chris/Desktop/Programming/VueVisualizer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.spotifyCard {\n\twidth: 30vw;\n\ttext-align:center;\n}\n",{"version":3,"sources":["Visualizer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA","file":"Visualizer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\t<div id='visualizer'>\n\t\t<h1>Visualizer Page</h1>\n\t\t<h2 class='md-title'>Primary Spotify Account</h2>\n\t\t<div class='md-subhead' style='overflow-wrap:break-word'>This is the account that will be used for music streaming</div>\n\t\t<div v-if='tokenExists===true'>\n\t\t\t<md-card class='spotifyCard'>\n      \t\t<md-card-header>\n       \t\t\t<md-card-header-text>\n         \t\t\t<div class=\"md-title\">{{primary_user}}</div>\n      \t\t\t\t<div class=\"md-subhead\">{{primary_type}}</div>\n\t\t\t\t\t</md-card-header-text>\n\n\t\t\t\t\t<md-card-media>\n\t\t\t\t\t\t<img src=\"@/assets/spotifyLogo.png\" alt=\"Spotify\">\n        \t\t\t</md-card-media>\n      \t\t</md-card-header>\n\n      \t\t<md-card-actions>\n      \t\t\t<md-button @click='deleteToken()'>Unlink</md-button>\n      \t\t</md-card-actions>\n\t\t\t</md-card>\n\t\t</div>\n\n\t\t<div v-if='tokenExists===false'>\n\t\t\t<md-card class='spotifyCard'>\n   \t\t\t<md-card-header>\n\t\t\t\t\t<md-card-header-text>\n      \t\t\t\t<div class=\"md-title\">No Primary Account</div>\n\t\t\t\t\t\t<div class=\"md-subhead\">Link a new account</div>\n      \t\t\t</md-card-header-text>\n \t\t\t\t\t\n\t\t\t\t\t<md-card-media>\n   \t\t\t\t\t<img src=\"@/assets/spotifyLogo.png\" alt=\"Spotify\">\n   \t\t\t\t</md-card-media>\n      \t\t</md-card-header>\n\n      \t\t<md-card-actions>\n        \t\t\t<md-button @click='linkAccount()'>Link Account</md-button>\n      \t\t</md-card-actions>\n   \t\t</md-card>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport SpotifyService from '@/services/SpotifyService';\nimport Controls from '@/components/Controls';\n\nexport default {\n\tdata() {\n\t\treturn {\n      token: '',\n      volume: 100,\n      primary_user: '',\n      primary_type: '',\n      tokenExists: true,\n\t\tauthWindow: Window,\n\t\tdevices: [],\n\t\t}\n\t},\n\tcreated() {;\n\t\tthis.getToken();\n\t\t//this.getCurrentlyPlaying();\n\t\tthis.getAccount();\n    \n\t},\n\tmethods: {\n\t\tgetToken() {\n\t\t\tif(localStorage.access_token) {\n\t\t\t\tthis.token = localStorage.access_token;\n\t\t\t\tthis.tokenExists = true;\n     \t} else {\n        alert(\"Oops! Something went wrong linking your Spotify Account\");\n        this.tokenExists = false;\n\t\t\t}\n\t\t},\n    async linkAccount() {\n\t\t\tthis.$wait.start('api');\n\t\t\tconst loginResponse = await SpotifyService.login();\n\t\t\tthis.$wait.end('api');\n\t\t\tvar url = (loginResponse.data.redirect);\n\t\t\tthis.authWindow.open(url, '_blank', \"height=500,width=500,toolbar=no,menubar=no,scrollbars=no,location=no,status=no left=300 top=200\");\n\t\t},\n\t\tasync checkToken() {\n\t\t if(localStorage.access_token) {\n        this.tokenExists = true;\n        this.token = localStorage.access_token;\n      } else {\n        this.tokenExists = false;\n        alert('Something went wrong linking your Spotify account!');\n      }\n\t\t},\n    async getDevices() {\n\t\t\tconst response = await SpotifyService.getDevices();\n\t\t\tif(response.data.success) {\n\t\t\t\tthis.devices = response.data.devices;\n\t\t\t}\n    },\n    async getAccount() {\n      const profileResponse = await SpotifyService.getProfile(this.token);\n\t\t\tthis.primary_user = profileResponse.data.name;\n\t\t\tthis.primary_type = profileResponse.data.type;\n\t\t\tthis.primary_type = this.primary_type.charAt(0).toUpperCase() + this.primary_type.slice(1);\n\t\t},\n\t}\n}\n</script>\n\n<style>\n.spotifyCard {\n\twidth: 30vw;\n\ttext-align:center;\n}\n</style>\n"]}]}